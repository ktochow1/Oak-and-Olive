[{"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/reportWebVitals.js":"1","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/App.js":"2","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/index.js":"3","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/containers/AppContainer.js":"4","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/NavBar.js":"5","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/HomePageImage.js":"6","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/Hat.js":"7","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/pages/HomePage.js":"8","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/rootReducer.js":"9","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/Inventory/inventoryData.js":"10","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/containers/HatContainer.js":"11","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/Bottom.js":"12","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/containers/BottomContainer.js":"13","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/pages/SignUpSignIn.js":"14","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/SignUpForm.js":"15","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/SignInForm.js":"16","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/firebase/firebase.utils.js":"17","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/redux/user/user.actions.js":"18","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/Routes.js":"19"},{"size":362,"mtime":1609770513658,"results":"20","hashOfConfig":"21"},{"size":2291,"mtime":1610755840645,"results":"22","hashOfConfig":"21"},{"size":900,"mtime":1609972912679,"results":"23","hashOfConfig":"21"},{"size":651,"mtime":1609858956290,"results":"24","hashOfConfig":"25"},{"size":1639,"mtime":1610755708157,"results":"26","hashOfConfig":"21"},{"size":610,"mtime":1609871061358,"results":"27","hashOfConfig":"25"},{"size":1545,"mtime":1610113795036,"results":"28","hashOfConfig":"21"},{"size":1650,"mtime":1610029356573,"results":"29","hashOfConfig":"21"},{"size":82,"mtime":1609884575115,"results":"30","hashOfConfig":"21"},{"size":1920,"mtime":1610025137967,"results":"31","hashOfConfig":"21"},{"size":1585,"mtime":1610037946529,"results":"32","hashOfConfig":"21"},{"size":148,"mtime":1610029528359,"results":"33","hashOfConfig":"21"},{"size":821,"mtime":1610029578175,"results":"34","hashOfConfig":"21"},{"size":372,"mtime":1610366487470,"results":"35","hashOfConfig":"21"},{"size":4257,"mtime":1610744282532,"results":"36","hashOfConfig":"21"},{"size":4590,"mtime":1610748078277,"results":"37","hashOfConfig":"21"},{"size":1027,"mtime":1610749094467,"results":"38","hashOfConfig":"21"},{"size":91,"mtime":1610409327383,"results":"39","hashOfConfig":"25"},{"size":1004,"mtime":1610742896841,"results":"40","hashOfConfig":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1o6tocn",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bknfqt",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/reportWebVitals.js",[],["88","89"],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/App.js",["90","91"],"import React from 'react'\nimport HomePage from './pages/HomePage'\nimport HatContainer from './containers/HatContainer'\nimport BottomContainer from './containers/BottomContainer'\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport NavBar from './components/NavBar'\nimport SignUpSignIn from './pages/SignUpSignIn'\nimport {auth} from './firebase/firebase.utils'\nimport {connect} from 'react-redux'\n// import {setCurrentUser} from './redux/user/user.actions'\n// import Routes from './components/Routes'\n// import SessionContext from './redux/setSessionCookie'\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  componentDidMount(){\n    //user parameter is the user state in my app\n    //auth subscriber (onAuthStateChanged) is always listening to user param and keeps sending\n    //user authenticated obj UNTIL user signs out\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n      this.setState({\n        currentUser: user\n      })\n      console.log(user)\n    })\n  }\n\n  componentWillUnmount(){\n    this.unsubscribeFromAuth()\n  }\n\n  unsubscribeFromAuth = null \n  \n\n\n    render(){\n        return(\n          // <SessionContext.Provider value={}>\n          \n            <>\n            \n            <NavBar currentUser={this.state.currentUser} hideImage={this.hideImage} />  \n            {console.log(this.state.currentUser)}\n             <Switch>  \n              <Route exact path='/'><HomePage /></Route>\n              <Route path=\"/hats\"><HatContainer /></Route>\n              <Route path=\"/signUp\" render={() => this.state.currentUser ? (<Redirect to='/' />) : (<SignUpSignIn />)}><SignUpSignIn /></Route>\n              <Route path=\"/bottoms\"><BottomContainer/></Route>\n              {/* <Route path=\"/current_user\"></Route> */}\n              {/* <Route path=\"/logout\"> */}\n               \n              {/* </Route> */}\n            </Switch>   \n            // {/* </SessionContext.Provider> */}\n          </>\n        )\n    }\n}\n\n\n// const mapStateToProps = ({user})=> ({\n//   currentUser: user.currentUser\n// })\n\n\n// const mapDispatchToProps = dispatch => ({\n//   setCurrentUser: user => dispatch(setCurrentUser(user))\n// })\nexport default App\n// connect(mapStateToProps, mapDispatchToProps)(App)",["92","93"],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/index.js",[],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/containers/AppContainer.js",[],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/NavBar.js",["94"],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/HomePageImage.js",["95"],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/Hat.js",["96","97"],"import React from 'react'\nimport '../styles/hat.styles.css'\nimport {Link} from 'react-router-dom'\n// import {useRouteMatch} from 'react-router-dom'\n// import INVENTORY_DATA from '../Inventory/inventoryData'\n\n// class Hat extends React.Component {\n//     constructor(props){\n//         super(props)\n//         this.imageRef = React.createRef()\n//     }\n\n//     componentDidMount(){\n//         console.log(this.imageRef)\n//     }\n\n//     render(){\n//         // const {title, items} = this.props\n//         const displayHat = ({title, items}) => (\n//             items.map((item) => (\n//                 <img ref={this.imageRef} src={items.imageUrl.small}/>\n//             ))\n            \n//         )\n//         return(\n//             <div>\n//                 {this.displayHat}\n//             </div>\n//         )\n//     }\n// }\n\n\n\nconst Hat = ({title, items}) => (\n    \n    <div  className=\"hat-div\">\n    {/* style={{gridRowEnd: `span ${this.props.span}`}} */}\n        {/* <h2 className=\"category-title\">{title.toUpperCase()}</h2> */}\n        {items.map((item) => (\n            <div className=\"item-div\" key={item.id}>\n                <h4 className=\"item-title\">{item.name}</h4>\n                <img className=\"image\" src={item.imageUrl} width=\"250px\" height=\"auto\"></img>\n                {/* <img ref={this.props.imageRef} src={item.imageUrl} width=\"250px\" height=\"auto\"></img> */}\n                <p className=\"price\">${item.price}</p>\n                {/* {console.log(item)} */}\n            </div>\n\n        ))}\n    </div>\n)\n\n\nexport default Hat","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/pages/HomePage.js",[],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/rootReducer.js",[],["98","99"],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/Inventory/inventoryData.js",[],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/containers/HatContainer.js",[],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/Bottom.js",[],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/containers/BottomContainer.js",[],["100","101"],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/pages/SignUpSignIn.js",[],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/SignUpForm.js",["102"],"import React from 'react'\n\n// import {auth, createUserProfile, firebaseSignUpNewUsers} from '../firebase/firebase.utils'\n\n\nclass SignUpForm extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state={\n            email: '',\n            password: '',\n            username: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: [event.target.value]\n        })\n    }\n\n    handleSubmit = async event => {\n        console.log(\"here\")\n        event.preventDefault();\n        const {username, password, email} = this.state \n        // console.log(email)\n        // let passStr = password.toString()\n        // let emailStr = email.toString()\n        // try {\n        //     const user = await auth.createUserWithEmailAndPassword(emailStr, passStr)\n        //     createUserProfile(user, {username})\n        //     console.log(user)\n        //     this.setState({\n        //         username: '',\n        //         email: '',\n        //         password: '',\n        //         confirmPassword: ''\n        //     })\n        // } catch(error){\n        //     console.log(error)\n        // }\n    \n        // const form = event.currentTarget \n        // const url = form.action\n        \n        // const formData = new FormData(form)\n        //  console.log(formData)\n        //     try {\n                \n        //         const responseData = await postFormDataAsJson({url, formData})\n        //         console.log({responseData})\n        //     } \n        //     catch (error) {\n        //         // console.log(error)\n        //     }\n\n           async function postData(url, data){\n                \n                const response = await fetch(url, {\n                    method: 'POST',\n                    mode: 'cors',\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Accept\": \"application/json\"\n                    },\n                    body: JSON.stringify(data)\n                    \n                });\n                // return response.json();\n            }\n        \n\n       postData('http://localhost:3000/api/v1/users/new', {username, email, password})\n       .then(res => {\n           console.log(res)\n       })\n       this.setState({\n           username: '',\n           password: '',\n           email: '',\n           confirmPassword: ''\n       })\n        \n    }\n\n    handleLogOut = async event => {\n        event.preventDefault()\n        const {username, password, email} = this.state\n        // console.log(this.props)\n\n        async function logout(url, data){\n            // event.preventDefault()\n\n                const response = await fetch(url, {\n                    method: 'DELETE',\n                    mode: 'cors',\n                    headers: {\n                        \"Content-Type\": \"applciation/json\",\n                        \"Accept\": \"application/json\"\n                    },\n                    body: JSON.stringify(data)\n                }) \n                return response.json()   \n            }\n            logout('http://localhost:3000/logout', {username, email, password})\n        .then(data => {\n            // data.json()\n            console.log(data)\n        })\n        }\n        \n    render(){\n\n        return(\n            <div>\n                <form name=\"form-data\" onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Set a display name\"/><br />\n                    <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} placeholder=\"Enter your email\"/><br />\n                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"Enter a password\"/><br />\n                    <input type=\"password\" name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.handleChange} placeholder=\"Confirm password\"/><br />\n                    <input type=\"submit\"/>\n                </form> <br />\n\n                    <button onClick={this.handleLogOut}>Log Out</button>\n\n            </div>\n\n        )\n    }\n\n}\n\n\nexport default SignUpForm","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/SignInForm.js",["103","104"],"import React from 'react'\nimport firebase from 'firebase/app'\n\nimport {auth, signInWithGoogle} from '../firebase/firebase.utils'\n\nclass SignInForm extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: [event.target.value]\n        })\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const {username, password} = this.state\n\n       async function login(url, data) {\n            const response = await fetch(url, {\n                method: 'POST',\n                mode: 'cors',\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n            })\n            // console.log(response)\n            return response.json() \n        }\n\n        login('http://localhost:3000/api/v1/users', {username, password})\n        .then(data => {\n            console.log(data)\n        });\n        // try {\n\n        //     await auth().signInWithEmailAndPassword(email, password)\n        //     this.setState({email: '', password: ''})\n       \n        // } \n        // .catch(error){\n        //   console.log(error)\n        // }\n        // this.setState({email: '', password: ''})\n        // console.log(this.state)\n\n        \n    }\n        \n        \n\n        // handleClick = event => {\n        //     event.preventDefault()\n        //     firebase.auth().signinWithRedirect(provider)\n        //     firebase.auth().getRedirectResult()\n        //     .then((result) => {\n        //         if(result.credential){\n        //             let credential = result.credential \n        //             let token = credential.accessToken\n        //         }\n        //         let user = result.user\n        //     }).catch((error) => {\n        //         let errorCode = error.code \n        //         let errorMessage = error.errorMessage\n        //         let email = error.email \n        //         let credential = error.credential\n        //     })\n        // }\n        // emailStr = this.state.email.toString()\n        // passStr = this.state.password.toString()\n        // signInWithGoogle = () => {\n        //     let provider = new firebase.auth.GoogleAuthProvider()\n        //     firebase.auth().signInWithPopup(provider)\n        //     .then((result) => {\n        //         let credential = result.credential\n        //         let token = credential.accessToken \n        //         let user = result.user \n        //     }).catch((error) => {\n        //         let errorMessage = error.message\n        //     })\n        //     firebase.auth().setPersistence(firebase.Auth.Persistence.SESSION)\n        //     .then(() => {\n        //         return firebase.auth().signInWithEmailAndPassword(emailStr, passStr);\n        //     }).catch((error) => {\n        //         let message = error.message\n        //     })\n        // };\n        \n\n    render(){\n        // let {email, password} = this.state\n\n        // const signInWithGoogle = () => {\n        //     let provider = new firebase.auth.GoogleAuthProvider()\n        //     auth.signInWithPopup(provider)\n        //     .then((result) => {\n        //         console.log(result)\n        //         // console.log(firebase.auth.OAuthCredential)\n        //         let credential = result.credential\n        //         let token = credential.accessToken \n        //         let user = result.user \n\n        //     }).catch((error) => {\n        //         // let errorMessage = error.message\n        //         let credential = error.credential\n        //     })\n        //     auth.setPersistence(firebase.auth.Auth.Persistence.SESSION)\n        //     .then((user) => {\n        //         console.log(user)\n        //         return firebase.auth().signInWithEmailAndPassword(email, password);\n\n        //     }).catch((error) => {\n        //         let message = error.message\n    \n\n        \n    \n        return(\n            <form onSubmit={this.handleSubmit} >\n                <input onChange={this.handleChange} name=\"email\" value={this.state.email} type=\"email\"/>\n                <input onChange={this.handleChange} name=\"password\" value={this.state.password} type=\"password\" />\n                <input type=\"submit\" value=\"Log In\"/>\n                <button onClick={signInWithGoogle}>Sign In with Google</button>\n            </form>\n        )\n    }\n\n}\n\n\nexport default SignInForm \n\n","/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/firebase/firebase.utils.js",[],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/redux/user/user.actions.js",[],["105","106"],"/Users/katrinatochowicz/Development/code/Projects/rails-api/frontend/src/components/Routes.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":9,"column":9,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":60,"column":22,"nodeType":"117","endLine":61,"endColumn":16},{"ruleId":"107","replacedBy":"118"},{"ruleId":"109","replacedBy":"119"},{"ruleId":"111","severity":1,"message":"120","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":7,"column":13,"nodeType":"123","endLine":7,"endColumn":229},{"ruleId":"111","severity":1,"message":"124","line":3,"column":9,"nodeType":"113","messageId":"114","endLine":3,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":43,"column":17,"nodeType":"123","endLine":43,"endColumn":88},{"ruleId":"107","replacedBy":"125"},{"ruleId":"109","replacedBy":"126"},{"ruleId":"107","replacedBy":"127"},{"ruleId":"109","replacedBy":"128"},{"ruleId":"111","severity":1,"message":"129","line":61,"column":23,"nodeType":"113","messageId":"114","endLine":61,"endColumn":31},{"ruleId":"111","severity":1,"message":"130","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"131","line":4,"column":9,"nodeType":"113","messageId":"114","endLine":4,"endColumn":13},{"ruleId":"107","replacedBy":"132"},{"ruleId":"109","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal",["134"],["135"],"'HomePage' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.",["134"],["135"],["134"],["135"],"'response' is assigned a value but never used.","'firebase' is defined but never used.","'auth' is defined but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation"]